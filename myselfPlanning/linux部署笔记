1.服务器到系统安装 
系统一般占用到磁盘是 dev/sda -> sda1，sda2两个区
2.格式化磁盘 
检查磁盘情况 fdisk -l 看是否有新增磁盘  比如 /dev/sdb
如果有新磁盘需要格式化 创建文件系统 mkfs -t ext4 /dev/sdb

mount -t ext4 -o defaults /dev/sdb /root
df -h 查看挂载情况

重启自动挂载
lsblk -f 查看磁盘的 uuid 81028e60-16e5-4145-aa6f-eaa3cfd37e18
vim /etc/fstab 添加一行
UUID=81028e60-16e5-4145-aa6f-eaa3cfd37e18 /data  ext4     defaults  0 0

也可以设置在/etc/rc.local  用mount -t ext4 /dev/sdb /data  但是根据系统重启顺序 可能会影响一些命令失效 


第二种方式
2、进行分区，根据自己具体的未分区硬盘进行，下面以/dev/vdb为例进行分区（比如我要将这块硬盘分为两个区，一个区为32G用作swap缓冲，另外一个区为剩下所有空间，用于存数据）

#输入下面命令进去分区
fdisk  /dev/vdb
　　第一分区：

　　　　输入n，然后会提示主分区还是拓展分区，我们是主分区直接默认。

　　　　接着会问这是第几块分区，默认就是第一块，直接按enter就行了。

　　　　下面会选择分区大小，我们输入：+32G  

　　第二分区：

　　　　接着输入n，然后全默认，最后按 w 保存分区信息 这样就完成了分区。

3、进行格式化

　　由于我分了两个区，一个做缓冲区，一个存项目数据。

　　分区1 ：虚拟内存swap创建:  mkswap  /dev/vdb1 

　　分区2：初始化分区2为ext4格式:   mkfs.ext4  /dev/vdb2

　　开启挂载：swapon  /dev/vdb1

4、进行挂载

  分区2挂载前，需要先自己创建一个目录

　　mkdir /data

   编辑开机自动挂载：vim /etc/fstab    按照下面的格式
   磁盘名称      挂载目录  分区类型   
   /dev/vdb1   /data    ext4     defaluts 0 0
   保存后 执行 mount -a   即可完成挂载。

　　完成后输入  df -h  看看是否挂载成功
  
Linux系统的服务器，ssh远程登录服务器后，显示“-bash-4.1#”，无法正常显示主机名和用户名 
解决方法：
　　1、在服务器上执行命令：
　　echo $PS1
　　查看一下当前变量PS1的内容，若显示为空，手动在服务器上设置变量PS1。
　　PS1='[\u@\h \W]\$'
　　设置变量后，显示就正常了。
  
 2、若变量PS1设置正常，查看一下/etc/passwd 这个配置文件，看下root用户的shell设置是不是正确。
　　root用户的正常shell是bash。 例如：/bin/bash
　　cat /etc/passwd | grep root
  

安装lnmp的环境步骤：
https://www.cnblogs.com/dump/p/10329850.html 

mysql安装稍微出了点问题：
可能防火墙有点问题  没有开启80 和3306 端口无法连接和nginx和外链mysql
网上查了资料处理步骤为：
CentOS7开始，默认是没有iptables的，而是使用firewall防火墙。本文将屏蔽掉firewall，使用iptables
1、停止并屏蔽firewalld服务
停止 systemctl stop firewalld
屏蔽 systemctl mask firewalld

2、安装iptables-service软件包
yum install iptables-services

3、在引导时启用iptables服务
systemctl enable iptables

4、启动iptables服务
systemctl start iptables

5、保存防火墙规则
service iptables save

然后vim /etc/sysconfig/iptables 新增
-A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT

案例：
 1 # Firewall configuration written by system-config-firewall
 2 # Manual customization of this file is not recommended.
 3 *filter
 4 :INPUT ACCEPT [0:0]
 5 :FORWARD ACCEPT [0:0]
 6 :OUTPUT ACCEPT [0:0]
 7 -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
 8 -A INPUT -p icmp -j ACCEPT
 9 -A INPUT -i lo -j ACCEPT
10 -A INPUT -i eth0 -j ACCEPT
11 -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
12 -A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
13 -A INPUT -m state --state NEW -m tcp -p tcp --dport 3306 -j ACCEPT
14 -A FORWARD -m state --state ESTABLISHED,RELATED -j ACCEPT
15 -A FORWARD -p icmp -j ACCEPT
16 -A FORWARD -i lo -j ACCEPT
17 -A FORWARD -i eth0 -j ACCEPT
18 -A INPUT -j REJECT --reject-with icmp-host-prohibited
19 -A FORWARD -j REJECT --reject-with icmp-host-prohibited
20 COMMIT

